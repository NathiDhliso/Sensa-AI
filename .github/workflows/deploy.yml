name: Deploy Frontend to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test:run

  build-and-deploy:
    name: Build and Deploy
    needs: test
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL || vars.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY || vars.VITE_SUPABASE_ANON_KEY }}

      - name: Check for Google Cloud credentials
        id: check-gcp
        run: |
          if [ -n "${{ secrets.WIF_PROVIDER }}" ] && [ -n "${{ secrets.WIF_SERVICE_ACCOUNT }}" ]; then
            echo "gcp-available=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Google Cloud credentials found. Proceeding with deployment."
          else
            echo "gcp-available=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Google Cloud credentials not available. Skipping deployment."
            echo "üìã To enable deployment, configure these repository secrets:"
            echo "   - WIF_PROVIDER: Your Workload Identity Federation provider"
            echo "   - WIF_SERVICE_ACCOUNT: Your service account email"
          fi

      - name: Authenticate to Google Cloud
        if: steps.check-gcp.outputs.gcp-available == 'true'
        id: auth
        continue-on-error: true
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Check authentication result
        if: steps.check-gcp.outputs.gcp-available == 'true'
        id: auth-check
        run: |
          if [ "${{ steps.auth.outcome }}" == "success" ]; then
            echo "auth-success=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Google Cloud authentication successful"
          else
            echo "auth-success=false" >> $GITHUB_OUTPUT
            echo "‚ùå Google Cloud authentication failed"
            echo "üîß Please check your Workload Identity Federation configuration:"
            echo "   1. Verify WIF_PROVIDER format: projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/providers/PROVIDER_ID"
            echo "   2. Verify WIF_SERVICE_ACCOUNT format: SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com"
            echo "   3. Ensure the pool and provider exist and are enabled"
            echo "   4. Verify the service account has necessary permissions"
          fi

      - name: Set up Cloud SDK
        if: steps.check-gcp.outputs.gcp-available == 'true' && steps.auth-check.outputs.auth-success == 'true'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Submit build to Google Cloud Build
        if: steps.check-gcp.outputs.gcp-available == 'true' && steps.auth-check.outputs.auth-success == 'true'
        run: |
          gcloud builds submit --config cloudbuild.yaml \
            --substitutions=_VITE_SUPABASE_URL='${{ secrets.VITE_SUPABASE_URL || vars.VITE_SUPABASE_URL }}',_VITE_SUPABASE_ANON_KEY='${{ secrets.VITE_SUPABASE_ANON_KEY || vars.VITE_SUPABASE_ANON_KEY }}'

      - name: Deployment Summary
        run: |
          echo "üéØ Build and Deployment Summary"
          echo "================================"

          if [ "${{ steps.check-gcp.outputs.gcp-available }}" == "true" ]; then
            if [ "${{ steps.auth-check.outputs.auth-success }}" == "true" ]; then
              echo "‚úÖ Build and deployment completed successfully!"
              echo "üöÄ Application deployed to Google Cloud Run"
            else
              echo "‚úÖ Build completed successfully!"
              echo "‚ùå Deployment failed due to authentication issues"
              echo ""
              echo "üîß Google Cloud Setup Required:"
              echo "1. Create a Workload Identity Federation pool and provider"
              echo "2. Create a service account with Cloud Run permissions"
              echo "3. Configure the following repository secrets:"
              echo "   - WIF_PROVIDER: projects/YOUR_PROJECT_NUMBER/locations/global/workloadIdentityPools/YOUR_POOL/providers/YOUR_PROVIDER"
              echo "   - WIF_SERVICE_ACCOUNT: your-service-account@your-project.iam.gserviceaccount.com"
              echo ""
              echo "üìö Documentation: https://cloud.google.com/iam/docs/workload-identity-federation"
            fi
          else
            echo "‚úÖ Build completed successfully!"
            echo "‚ÑπÔ∏è Deployment skipped - Google Cloud credentials not configured."
            echo ""
            echo "üîß To enable deployment, add these repository secrets:"
            echo "   - WIF_PROVIDER: Your Workload Identity Federation provider"
            echo "   - WIF_SERVICE_ACCOUNT: Your service account email"
            echo "   - VITE_SUPABASE_URL: Your Supabase project URL"
            echo "   - VITE_SUPABASE_ANON_KEY: Your Supabase anonymous key"
          fi

          echo ""
          echo "üì¶ Build artifacts are available in the dist/ folder"
          echo "üåê You can deploy manually to any static hosting service"